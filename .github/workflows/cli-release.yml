name: cli-release

on:
  push:
    tags:
      - cli-v*

jobs:
  release:
    if: github.repository == 'sourcegraph/cody'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: write # for publishing the release
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version-file: .tool-versions
      - uses: pnpm/action-setup@v2
        with:
          run_install: true
      - name: get release version
        id: release_version
        run: |
          TAGGED_VERSION="${GITHUB_REF/refs\/tags\/cli-v/}"

          if [[ ! "${TAGGED_VERSION}" =~ ^[0-9]+\.[0-9]+\.[0-9]+.*$ ]]; then
            echo "Invalid version tag '${TAGGED_VERSION}'"
            exit 1
          fi

          echo "CLI_VERSION=${TAGGED_VERSION}" >> $GITHUB_ENV
          WRITTEN_VERSION="$(cat cli/package.json | jq '.version' -r)"

          if [[ "${TAGGED_VERSION}" != "${WRITTEN_VERSION}" ]]; then
            echo "Release tag and version in cli/package.json do not match: '${TAGGED_VERSION}' vs. '${WRITTEN_VERSION}'"
            exit 1
          fi
      - run: pnpm -C cli run test
      - run: pnpm -C cli publish
        if: github.repository == 'sourcegraph/cody'
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Cody CLI ${{ env.CLI_VERSION }}
          draft: false
      - name: upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cli/dist/cody
          asset_name: cody-cli-${{ env.CLI_VERSION }}.js
          asset_content_type: text/javascript
